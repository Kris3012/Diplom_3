package page;

import com.codeborne.selenide.SelenideElement;
import io.qameta.allure.Step;

import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;

public class RegisterPage {

    private final SelenideElement registerLink = $x("//a[text()='–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è']"); // üÜï –¥–æ–±–∞–≤–ª–µ–Ω–æ

    private final SelenideElement nameField = $x("//label[text()='–ò–º—è']/following-sibling::input");
    private final SelenideElement emailField = $x("//label[text()='Email']/following-sibling::input");
    private final SelenideElement passwordField = $x("//label[text()='–ü–∞—Ä–æ–ª—å']/..//input");

    private final SelenideElement registerButton = $x("//button[text()='–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è']");
    private final SelenideElement loginButton = $x("//a[text()='–í–æ–π—Ç–∏']");
    private final SelenideElement passwordError = $x("//p[contains(text(),'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å')]");

    @Step("–í–≤–æ–¥–∏–º –∏–º—è: {name}")
    public RegisterPage enterName(String name) {
        nameField.shouldBe(visible).setValue(name);
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º email: {email}")
    public RegisterPage enterEmail(String email) {
        emailField.shouldBe(visible).setValue(email);
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å")
    public RegisterPage enterPassword(String password) {
        passwordField.shouldBe(visible).setValue(password);
        return this;
    }

    @Step("–ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'")
    public RegisterPage clickRegisterButton() {
        registerButton.shouldBe(visible).click();
        return this;
    }

    @Step("–ù–∞–∂–∏–º–∞–µ–º —Å—Å—ã–ª–∫—É '–í–æ–π—Ç–∏'")
    public LoginPage clickLoginLink() {
        loginButton.shouldBe(visible).click();
        return new LoginPage();
    }

    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—è–≤–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –ø–∞—Ä–æ–ª–µ")
    public boolean isPasswordErrorVisible() {
        return passwordError.shouldBe(visible).isDisplayed();
    }

    @Step("–ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    public RegisterPage register(String name, String email, String password) {
        return enterName(name)
                .enterEmail(email)
                .enterPassword(password)
                .clickRegisterButton();
    }

    @Step("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    public RegisterPage clickRegisterLink() {
        System.out.println("‚û°Ô∏è –ö–ª–∏–∫–∞–µ–º —Å—Å—ã–ª–∫—É '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'");
        registerLink.shouldBe(visible).click();
        return new RegisterPage();
    }

    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ '–ò–º—è' –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
    public boolean isNameInputVisible() {
        return nameField.shouldBe(visible).isDisplayed();
    }
}
